# This file is @generated. To regenerate, run:
#    cargo run -p fixture-manager -- generate-hakari --fixture metadata_guppy_869476c

### BEGIN HAKARI SECTION
# resolver = '2'
# unify-target-host = 'none'
# unify-all = false
# platforms = ['nvptx64-nvidia-cuda', 'sparc64-unknown-openbsd']
# [[traversal-excludes.ids]]
# name = 'itertools'
# version = '0.8.2'
# crates-io = true
#
# [[traversal-excludes.ids]]
# name = 'wasm-bindgen-macro-support'
# version = '0.2.68'
# crates-io = true
# [[final-excludes.ids]]
# name = 'diffus'
# version = '0.9.1'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'git2-curl'
# version = '0.14.1'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'num-traits'
# version = '0.2.12'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'num_cpus'
# version = '1.13.0'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'terminal_size'
# version = '0.1.13'
# crates-io = true

[target.nvptx64-nvidia-cuda.dependencies]
bstr = { version = "0.2", features = ["default", "lazy_static", "regex-automata", "serde", "serde1", "serde1-nostd", "std", "unicode"] }
byteorder = { version = "1", default-features = false, features = ["std"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
either = { version = "1", features = ["default", "use_std"] }
itoa = { version = "0.4", features = ["default", "std"] }
memchr = { version = "2", features = ["default", "std", "use_std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "derive", "serde_derive", "std"] }
serde_json = { version = "1", features = ["default", "raw_value", "std"] }

[target.nvptx64-nvidia-cuda.build-dependencies]
proc-macro2 = { version = "1", features = ["default", "proc-macro"] }
quote = { version = "1", features = ["default", "proc-macro"] }
syn = { version = "1", features = ["clone-impls", "default", "derive", "full", "parsing", "printing", "proc-macro", "quote", "visit"] }

[target.sparc64-unknown-openbsd.dependencies]
bstr = { version = "0.2", features = ["default", "lazy_static", "regex-automata", "serde", "serde1", "serde1-nostd", "std", "unicode"] }
byteorder = { version = "1", default-features = false, features = ["std"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
either = { version = "1", features = ["default", "use_std"] }
itoa = { version = "0.4", features = ["default", "std"] }
libc = { version = "0.2", features = ["default", "std"] }
memchr = { version = "2", features = ["default", "std", "use_std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "derive", "serde_derive", "std"] }
serde_json = { version = "1", features = ["default", "raw_value", "std"] }

[target.sparc64-unknown-openbsd.build-dependencies]
libc = { version = "0.2", features = ["default", "std"] }
proc-macro2 = { version = "1", features = ["default", "proc-macro"] }
quote = { version = "1", features = ["default", "proc-macro"] }
syn = { version = "1", features = ["clone-impls", "default", "derive", "full", "parsing", "printing", "proc-macro", "quote", "visit"] }

### END HAKARI SECTION

# This part of the file should be preserved at the end.
