# This file is @generated. To regenerate, run:
#    cargo run -p fixture-manager -- generate-hakari --fixture metadata_guppy_78cb7e8

### BEGIN HAKARI SECTION
# version = 'v2'
# verify-mode = false
# unify-target-host = 'unify-on-both'
# unify-all = false
#
# [[platforms]]
# triple = 'thumbv7m-none-eabi'
# target-features = 'unknown'
# flags = ['cargo_web']
#
# [[platforms]]
# triple = 'mips64-unknown-linux-gnuabi64'
# target-features = 'all'
# flags = ['abc', 'test-flag']
#
# [[platforms]]
# triple = 'riscv32imac-unknown-none-elf'
# target-features = 'unknown'
# [[omitted-packages.ids]]
# name = 'git2-curl'
# version = '0.14.1'
# crates-io = true
#
# [[omitted-packages.ids]]
# name = 'maybe-uninit'
# version = '2.0.0'
# crates-io = true
#
# [[omitted-packages.ids]]
# name = 'remove_dir_all'
# version = '0.5.3'
# crates-io = true
#
# [[omitted-packages.ids]]
# name = 'schannel'
# version = '0.1.19'
# crates-io = true
#
# [[omitted-packages.ids]]
# name = 'winapi'
# version = '0.3.9'
# crates-io = true

[target.thumbv7m-none-eabi.dependencies]
bstr = { version = "0.2", features = ["default", "lazy_static", "regex-automata", "serde", "serde1", "serde1-nostd", "std", "unicode"] }
byteorder = { version = "1", default-features = false, features = ["std"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
either = { version = "1", features = ["default", "use_std"] }
itoa = { version = "0.4", features = ["default", "std"] }
memchr = { version = "2", features = ["default", "std", "use_std"] }
num-traits = { version = "0.2", features = ["default", "std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "derive", "serde_derive", "std"] }
serde_json = { version = "1", features = ["default", "raw_value", "std"] }

[target.thumbv7m-none-eabi.build-dependencies]
proc-macro2 = { version = "1", features = ["default", "proc-macro"] }
quote = { version = "1", features = ["default", "proc-macro"] }
syn = { version = "1", features = ["clone-impls", "default", "derive", "full", "parsing", "printing", "proc-macro", "quote", "visit"] }

[target.mips64-unknown-linux-gnuabi64.dependencies]
bstr = { version = "0.2", features = ["default", "lazy_static", "regex-automata", "serde", "serde1", "serde1-nostd", "std", "unicode"] }
byteorder = { version = "1", default-features = false, features = ["std"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
either = { version = "1", features = ["default", "use_std"] }
itoa = { version = "0.4", features = ["default", "std"] }
libc = { version = "0.2", features = ["default", "std"] }
memchr = { version = "2", features = ["default", "std", "use_std"] }
num-traits = { version = "0.2", features = ["default", "std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "derive", "serde_derive", "std"] }
serde_json = { version = "1", features = ["default", "raw_value", "std"] }

[target.mips64-unknown-linux-gnuabi64.build-dependencies]
libc = { version = "0.2", features = ["default", "std"] }
proc-macro2 = { version = "1", features = ["default", "proc-macro"] }
quote = { version = "1", features = ["default", "proc-macro"] }
syn = { version = "1", features = ["clone-impls", "default", "derive", "full", "parsing", "printing", "proc-macro", "quote", "visit"] }

[target.riscv32imac-unknown-none-elf.dependencies]
bstr = { version = "0.2", features = ["default", "lazy_static", "regex-automata", "serde", "serde1", "serde1-nostd", "std", "unicode"] }
byteorder = { version = "1", default-features = false, features = ["std"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
either = { version = "1", features = ["default", "use_std"] }
itoa = { version = "0.4", features = ["default", "std"] }
memchr = { version = "2", features = ["default", "std", "use_std"] }
num-traits = { version = "0.2", features = ["default", "std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "derive", "serde_derive", "std"] }
serde_json = { version = "1", features = ["default", "raw_value", "std"] }

[target.riscv32imac-unknown-none-elf.build-dependencies]
proc-macro2 = { version = "1", features = ["default", "proc-macro"] }
quote = { version = "1", features = ["default", "proc-macro"] }
syn = { version = "1", features = ["clone-impls", "default", "derive", "full", "parsing", "printing", "proc-macro", "quote", "visit"] }

### END HAKARI SECTION

# This part of the file should be preserved at the end.
