# This file is @generated. To regenerate, run:
#    cargo run -p fixture-manager -- generate-hakari --fixture metadata_guppy_869476c

### BEGIN HAKARI SECTION
# resolver = '2'
# unify-target-host = 'replicate-target-as-host'
# unify-all = false
# platforms = ['armv7r-none-eabihf', 'powerpc-wrs-vxworks']
# [[traversal-excludes.ids]]
# name = 'csv-core'
# version = '0.1.10'
# crates-io = true
#
# [[traversal-excludes.ids]]
# name = 'oorandom'
# version = '11.1.2'
# crates-io = true
#
# [[traversal-excludes.ids]]
# name = 'serde_ignored'
# version = '0.1.2'
# crates-io = true
#
# [[traversal-excludes.ids]]
# name = 'unicode-xid'
# version = '0.1.0'
# crates-io = true
#
# [[traversal-excludes.ids]]
# name = 'vcpkg'
# version = '0.2.10'
# crates-io = true
# [[final-excludes.ids]]
# name = 'bitmaps'
# version = '2.1.0'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'libc'
# version = '0.2.79'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'ppv-lite86'
# version = '0.2.9'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'rand_hc'
# version = '0.2.0'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'regex-automata'
# version = '0.1.9'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'syn'
# version = '0.15.44'
# crates-io = true

[dependencies]
bstr = { version = "0.2", features = ["default", "lazy_static", "regex-automata", "serde", "serde1", "serde1-nostd", "std", "unicode"] }
byteorder = { version = "1", default-features = false, features = ["std"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
either = { version = "1", features = ["default", "use_std"] }
itoa = { version = "0.4", features = ["default", "std"] }
memchr = { version = "2", features = ["default", "std", "use_std"] }
num-traits = { version = "0.2", features = ["default", "std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "derive", "serde_derive", "std"] }
serde_json = { version = "1", features = ["default", "raw_value", "std"] }

[build-dependencies]
bstr = { version = "0.2", features = ["default", "lazy_static", "regex-automata", "serde", "serde1", "serde1-nostd", "std", "unicode"] }
byteorder = { version = "1", default-features = false, features = ["std"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
either = { version = "1", features = ["default", "use_std"] }
itoa = { version = "0.4", features = ["default", "std"] }
memchr = { version = "2", features = ["default", "std", "use_std"] }
num-traits = { version = "0.2", features = ["default", "std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "derive", "serde_derive", "std"] }
serde_json = { version = "1", features = ["default", "raw_value", "std"] }
syn = { version = "1", features = ["clone-impls", "default", "derive", "full", "parsing", "printing", "proc-macro", "quote", "visit"] }

[target.armv7r-none-eabihf.dependencies]
bstr = { version = "0.2", features = ["default", "lazy_static", "regex-automata", "serde", "serde1", "serde1-nostd", "std", "unicode"] }
byteorder = { version = "1", default-features = false, features = ["std"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
either = { version = "1", features = ["default", "use_std"] }
itoa = { version = "0.4", features = ["default", "std"] }
memchr = { version = "2", features = ["default", "std", "use_std"] }
num-traits = { version = "0.2", features = ["default", "std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "derive", "serde_derive", "std"] }
serde_json = { version = "1", features = ["default", "raw_value", "std"] }

[target.armv7r-none-eabihf.build-dependencies]
bstr = { version = "0.2", features = ["default", "lazy_static", "regex-automata", "serde", "serde1", "serde1-nostd", "std", "unicode"] }
byteorder = { version = "1", default-features = false, features = ["std"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
either = { version = "1", features = ["default", "use_std"] }
itoa = { version = "0.4", features = ["default", "std"] }
memchr = { version = "2", features = ["default", "std", "use_std"] }
num-traits = { version = "0.2", features = ["default", "std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "derive", "serde_derive", "std"] }
serde_json = { version = "1", features = ["default", "raw_value", "std"] }
syn = { version = "1", features = ["clone-impls", "default", "derive", "full", "parsing", "printing", "proc-macro", "quote", "visit"] }

[target.powerpc-wrs-vxworks.dependencies]
bstr = { version = "0.2", features = ["default", "lazy_static", "regex-automata", "serde", "serde1", "serde1-nostd", "std", "unicode"] }
byteorder = { version = "1", default-features = false, features = ["std"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
either = { version = "1", features = ["default", "use_std"] }
itoa = { version = "0.4", features = ["default", "std"] }
memchr = { version = "2", features = ["default", "std", "use_std"] }
num-traits = { version = "0.2", features = ["default", "std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "derive", "serde_derive", "std"] }
serde_json = { version = "1", features = ["default", "raw_value", "std"] }

[target.powerpc-wrs-vxworks.build-dependencies]
bstr = { version = "0.2", features = ["default", "lazy_static", "regex-automata", "serde", "serde1", "serde1-nostd", "std", "unicode"] }
byteorder = { version = "1", default-features = false, features = ["std"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
either = { version = "1", features = ["default", "use_std"] }
itoa = { version = "0.4", features = ["default", "std"] }
memchr = { version = "2", features = ["default", "std", "use_std"] }
num-traits = { version = "0.2", features = ["default", "std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "derive", "serde_derive", "std"] }
serde_json = { version = "1", features = ["default", "raw_value", "std"] }
syn = { version = "1", features = ["clone-impls", "default", "derive", "full", "parsing", "printing", "proc-macro", "quote", "visit"] }

### END HAKARI SECTION

# This part of the file should be preserved at the end.
