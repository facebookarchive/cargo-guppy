# This file is @generated. To regenerate, run:
#    cargo run -p fixture-manager -- generate-hakari --fixture metadata_libra_f0091a4

### BEGIN HAKARI SECTION
# resolver = '1'
# unify-target-host = 'none'
# unify-all = false
# platforms = []
# [[omitted-packages.ids]]
# name = 'ansi_term'
# version = '0.11.0'
# crates-io = true
#
# [[omitted-packages.ids]]
# name = 'byte-tools'
# version = '0.3.1'
# crates-io = true
#
# [[omitted-packages.ids]]
# name = 'prettydiff'
# version = '0.3.1'
# crates-io = true
#
# [[omitted-packages.ids]]
# name = 'testsuite'
# version = '0.1.0'
# workspace-path = 'testsuite'
#
# [[omitted-packages.ids]]
# name = 'tiny-keccak'
# version = '1.5.0'
# crates-io = true

[target.'cfg(all())'.dependencies]
arrayvec = { version = "0.5", features = ["default", "std"] }
backtrace = { version = "0.3", features = ["backtrace-sys", "dbghelp", "default", "dladdr", "libbacktrace", "libunwind", "serde", "serialize-serde", "std"] }
byteorder = { version = "1", features = ["default", "i128", "std"] }
bytes = { version = "0.4", default-features = false, features = ["either"] }
chrono = { version = "0.4", features = ["clock", "default", "serde", "std", "time"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
curve25519-dalek = { git = "https://github.com/calibra/curve25519-dalek.git", branch = "fiat", default-features = false, features = ["alloc", "curve25519-fiat", "fiat_u64_backend", "std", "u64_backend"] }
digest = { version = "0.8", default-features = false, features = ["std"] }
ed25519-dalek = { git = "https://github.com/calibra/ed25519-dalek.git", branch = "fiat", default-features = false, features = ["fiat_u64_backend", "serde", "std", "u64_backend"] }
either = { version = "1", features = ["default", "use_std"] }
failure = { version = "0.1", features = ["backtrace", "default", "derive", "failure_derive", "std"] }
futures = { version = "0.3", features = ["alloc", "async-await", "compat", "default", "executor", "futures-executor", "io-compat", "std"] }
futures-channel = { version = "0.3", features = ["alloc", "default", "futures-sink", "sink", "std"] }
futures-core = { version = "0.3", features = ["alloc", "default", "std"] }
futures-sink = { version = "0.3", features = ["alloc", "default", "std"] }
futures-task = { version = "0.3", default-features = false, features = ["alloc", "std"] }
futures-util = { version = "0.3", features = ["alloc", "async-await", "async-await-macro", "channel", "compat", "default", "futures-channel", "futures-io", "futures-macro", "futures-sink", "futures_01", "io", "io-compat", "memchr", "proc-macro-hack", "proc-macro-nested", "sink", "slab", "std", "tokio-io"] }
getrandom = { version = "0.1", default-features = false, features = ["std"] }
hyper = { version = "0.13", features = ["default", "net2", "runtime", "stream", "tcp"] }
itoa = { version = "0.4", features = ["default", "std"] }
libc = { version = "0.2", features = ["default", "extra_traits", "std"] }
log = { version = "0.4", default-features = false, features = ["std"] }
memchr = { version = "2", features = ["default", "libc", "std", "use_std"] }
num-integer = { version = "0.1", default-features = false, features = ["std"] }
num-traits = { version = "0.2", features = ["default", "std"] }
petgraph = { version = "0.5", features = ["default", "graphmap", "matrix_graph", "stable_graph"] }
rand-3b31131e45eafb45 = { package = "rand", version = "0.6", features = ["alloc", "default", "i128_support", "rand_os", "std"] }
rand-ca01ad9e24f5d932 = { package = "rand", version = "0.7", features = ["alloc", "default", "getrandom", "getrandom_package", "libc", "rand_pcg", "small_rng", "std"] }
rand_core = { version = "0.3", default-features = false, features = ["alloc", "std"] }
regex-syntax = { version = "0.6", features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
reqwest = { version = "0.10", default-features = false, features = ["__tls", "blocking", "hyper-rustls", "json", "rustls", "rustls-tls", "serde_json", "tokio-rustls", "webpki-roots"] }
ring = { version = "0.16", features = ["alloc", "default", "dev_urandom_fallback", "lazy_static", "std"] }
rustls = { version = "0.16", features = ["dangerous_configuration", "default", "log", "logging"] }
rusty-fork = { version = "0.2", features = ["default", "timeout", "wait-timeout"] }
serde = { version = "1", features = ["default", "derive", "rc", "serde_derive", "std"] }
sha2 = { version = "0.8", features = ["default", "std"] }
sha3 = { version = "0.8", features = ["default", "std"] }
slog = { version = "2", features = ["default", "max_level_debug", "max_level_trace", "release_max_level_debug", "std"] }
subtle = { version = "2", features = ["default", "i128", "std"] }
tokio = { version = "0.2", features = ["blocking", "default", "dns", "fnv", "fs", "full", "futures-core", "io-driver", "io-std", "io-util", "iovec", "lazy_static", "libc", "macros", "memchr", "mio", "mio-named-pipes", "mio-uds", "net", "num_cpus", "process", "rt-core", "rt-threaded", "rt-util", "signal", "signal-hook-registry", "slab", "stream", "sync", "tcp", "time", "tokio-macros", "udp", "uds", "winapi"] }
ureq = { version = "0.11", features = ["cookie", "cookies", "default", "json", "rustls", "serde_json", "tls", "webpki", "webpki-roots"] }
wasm-bindgen = { version = "0.2", features = ["default", "serde", "serde-serialize", "serde_json", "spans", "std"] }
web-sys = { version = "0.3", default-features = false, features = ["Crypto", "Headers", "MessageEvent", "Request", "RequestInit", "RequestMode", "Response", "Window", "Worker"] }
winapi = { version = "0.3", default-features = false, features = ["consoleapi", "errhandlingapi", "fileapi", "handleapi", "impl-debug", "impl-default", "ioapiset", "knownfolders", "libloaderapi", "lmcons", "memoryapi", "minschannel", "minwinbase", "minwindef", "namedpipeapi", "ntdef", "ntsecapi", "ntstatus", "objbase", "processenv", "processthreadsapi", "profileapi", "schannel", "securitybaseapi", "shlobj", "sspi", "std", "synchapi", "sysinfoapi", "threadpoollegacyapiset", "timezoneapi", "winbase", "wincon", "wincrypt", "winerror", "winnt", "winreg", "winsock2", "winuser", "ws2def", "ws2ipdef", "ws2tcpip", "wtypesbase"] }
x25519-dalek = { git = "https://github.com/calibra/x25519-dalek.git", branch = "fiat", default-features = false, features = ["fiat_u64_backend", "std", "u64_backend"] }
zeroize = { version = "1", default-features = false, features = ["alloc", "zeroize_derive"] }

[target.'cfg(all())'.build-dependencies]
byteorder = { version = "1", features = ["default", "i128", "std"] }
cc = { version = "1", default-features = false, features = ["jobserver", "parallel"] }
clap = { version = "2", features = ["ansi_term", "atty", "color", "default", "strsim", "suggestions", "vec_map"] }
digest = { version = "0.8", default-features = false, features = ["std"] }
either = { version = "1", features = ["default", "use_std"] }
getrandom = { version = "0.1", default-features = false, features = ["std"] }
libc = { version = "0.2", features = ["default", "extra_traits", "std"] }
log = { version = "0.4", default-features = false, features = ["std"] }
memchr = { version = "2", features = ["default", "libc", "std", "use_std"] }
nom = { version = "4", features = ["alloc", "default", "std", "verbose-errors"] }
petgraph = { version = "0.5", features = ["default", "graphmap", "matrix_graph", "stable_graph"] }
proc-macro2 = { version = "0.4", features = ["default", "proc-macro"] }
quote = { version = "0.6", features = ["default", "proc-macro"] }
rand-ca01ad9e24f5d932 = { package = "rand", version = "0.7", features = ["alloc", "default", "getrandom", "getrandom_package", "libc", "rand_pcg", "small_rng", "std"] }
rand_core = { version = "0.3", default-features = false, features = ["alloc", "std"] }
regex-syntax = { version = "0.6", default-features = false, features = ["unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "derive", "rc", "serde_derive", "std"] }
subtle = { version = "2", features = ["default", "i128", "std"] }
syn-3575ec1268b04181 = { package = "syn", version = "0.15", features = ["clone-impls", "default", "derive", "extra-traits", "full", "parsing", "printing", "proc-macro", "quote", "visit"] }
syn-dff4ba8e3ae991db = { package = "syn", version = "1", features = ["clone-impls", "default", "derive", "extra-traits", "fold", "full", "parsing", "printing", "proc-macro", "quote", "visit", "visit-mut"] }
winapi = { version = "0.3", default-features = false, features = ["consoleapi", "errhandlingapi", "fileapi", "handleapi", "impl-debug", "impl-default", "ioapiset", "knownfolders", "libloaderapi", "lmcons", "memoryapi", "minschannel", "minwinbase", "minwindef", "namedpipeapi", "ntdef", "ntsecapi", "ntstatus", "objbase", "processenv", "processthreadsapi", "profileapi", "schannel", "securitybaseapi", "shlobj", "sspi", "std", "synchapi", "sysinfoapi", "threadpoollegacyapiset", "timezoneapi", "winbase", "wincon", "wincrypt", "winerror", "winnt", "winreg", "winsock2", "winuser", "ws2def", "ws2ipdef", "ws2tcpip", "wtypesbase"] }

### END HAKARI SECTION

# This part of the file should be preserved at the end.
