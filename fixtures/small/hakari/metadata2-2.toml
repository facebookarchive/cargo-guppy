# This file is @generated. To regenerate, run:
#    cargo run -p fixture-manager -- generate-hakari --fixture metadata2

### BEGIN HAKARI SECTION
# resolver = '2'
# unify-target-host = 'unify-on-both'
# unify-all = true
# platforms = ['nvptx64-nvidia-cuda', 'sparc64-unknown-openbsd']
# [[omitted-packages.ids]]
# name = 'serde_yaml'
# version = '0.8.9'
# crates-io = true
#
# [[omitted-packages.ids]]
# name = 'walkdir'
# version = '2.2.9'
# crates-io = true

[target.nvptx64-nvidia-cuda.dependencies]
aho-corasick = { version = "0.7", features = ["default", "std"] }
datatest = { version = "0.4", features = ["default"] }
lazy_static = { version = "1", default-features = false, features = [] }
linked-hash-map = { version = "0.5", default-features = false, features = [] }
memchr = { version = "2", features = ["default", "use_std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", default-features = false, features = ["unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "std"] }
thread_local = { version = "0.3", default-features = false, features = [] }
walkdir = { path = "/Users/fakeuser/local/testworkspace/../walkdir", default-features = false, features = [] }
yaml-rust = { version = "0.4", default-features = false, features = [] }

[target.nvptx64-nvidia-cuda.build-dependencies]
ctor = { version = "0.1", default-features = false, features = [] }
datatest-derive = { version = "0.4", default-features = false, features = [] }
proc-macro2 = { version = "1", features = ["default", "proc-macro"] }
quote = { path = "/Users/fakeuser/local/testworkspace/../quote", features = ["default", "proc-macro"] }
syn = { version = "1", features = ["clone-impls", "default", "derive", "fold", "full", "parsing", "printing", "proc-macro", "quote"] }
unicode-xid = { version = "0.2", features = ["default"] }
version_check = { version = "0.9", default-features = false, features = [] }

[target.sparc64-unknown-openbsd.dependencies]
aho-corasick = { version = "0.7", features = ["default", "std"] }
datatest = { version = "0.4", features = ["default"] }
lazy_static = { version = "1", default-features = false, features = [] }
linked-hash-map = { version = "0.5", default-features = false, features = [] }
memchr = { version = "2", features = ["default", "use_std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", default-features = false, features = ["unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
serde = { version = "1", features = ["default", "std"] }
thread_local = { version = "0.3", default-features = false, features = [] }
walkdir = { path = "/Users/fakeuser/local/testworkspace/../walkdir", default-features = false, features = [] }
yaml-rust = { version = "0.4", default-features = false, features = [] }

[target.sparc64-unknown-openbsd.build-dependencies]
ctor = { version = "0.1", default-features = false, features = [] }
datatest-derive = { version = "0.4", default-features = false, features = [] }
proc-macro2 = { version = "1", features = ["default", "proc-macro"] }
quote = { path = "/Users/fakeuser/local/testworkspace/../quote", features = ["default", "proc-macro"] }
syn = { version = "1", features = ["clone-impls", "default", "derive", "fold", "full", "parsing", "printing", "proc-macro", "quote"] }
unicode-xid = { version = "0.2", features = ["default"] }
version_check = { version = "0.9", default-features = false, features = [] }

### END HAKARI SECTION

# This part of the file should be preserved at the end.
