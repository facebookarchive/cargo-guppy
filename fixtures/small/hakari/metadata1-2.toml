# This file is @generated. To regenerate, run:
#    cargo run -p fixture-manager -- generate-hakari --fixture metadata1

### BEGIN HAKARI SECTION
# version = 'v2'
# verify-mode = false
# unify-target-host = 'replicate-target-as-host'
# unify-all = true
#
# [[platforms]]
# triple = 'nvptx64-nvidia-cuda'
# target-features = 'unknown'
# flags = ['cargo_web', 'test-flag']
#
# [[platforms]]
# triple = 'sparc64-unknown-openbsd'
# target-features = 'unknown'
# flags = ['flag-test']
#
# [[omitted-packages]]
# name = 'libc'
# version = '0.2.62'
# crates-io = true
#
# [[omitted-packages]]
# name = 'serde_yaml'
# version = '0.8.9'
# crates-io = true
#
# [[omitted-packages]]
# name = 'thread_local'
# version = '0.3.6'
# crates-io = true
#
# [[omitted-packages]]
# name = 'walkdir'
# version = '2.2.9'
# source = 'git+https://github.com/BurntSushi/walkdir?tag=2.2.9#7c7013259eb9db400b3e5c7bc60330ca08068826'
#
# [[omitted-packages]]
# name = 'winapi-i686-pc-windows-gnu'
# version = '0.4.0'
# crates-io = true
#
# [[omitted-packages]]
# name = 'winapi-x86_64-pc-windows-gnu'
# version = '0.4.0'
# crates-io = true

[target.nvptx64-nvidia-cuda.dependencies]
aho-corasick = { version = "0.7", features = ["default", "std"] }
bitflags = { version = "1", features = ["default"] }
datatest = { version = "0.4", features = ["default", "region", "unsafe_test_runner"] }
linked-hash-map = { version = "0.5", default-features = false, features = [] }
memchr = { version = "2", features = ["default", "use_std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", default-features = false, features = ["unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
region = { version = "2", default-features = false, features = [] }
serde = { version = "1", features = ["default", "std"] }
yaml-rust = { version = "0.4", default-features = false, features = [] }

[target.nvptx64-nvidia-cuda.build-dependencies]
aho-corasick = { version = "0.7", features = ["default", "std"] }
bitflags = { version = "1", features = ["default"] }
ctor = { version = "0.1", default-features = false, features = [] }
datatest = { version = "0.4", features = ["default", "region", "unsafe_test_runner"] }
datatest-derive = { version = "0.4", default-features = false, features = [] }
linked-hash-map = { version = "0.5", default-features = false, features = [] }
memchr = { version = "2", features = ["default", "use_std"] }
proc-macro2 = { version = "1", features = ["default", "proc-macro"] }
quote = { path = "/fakepath/testcrate/../quote", features = ["default", "proc-macro"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", default-features = false, features = ["unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
region = { version = "2", default-features = false, features = [] }
serde = { version = "1", features = ["default", "std"] }
syn = { version = "1", features = ["clone-impls", "default", "derive", "fold", "full", "parsing", "printing", "proc-macro", "quote"] }
unicode-xid = { version = "0.2", features = ["default"] }
version_check = { version = "0.9", default-features = false, features = [] }
yaml-rust = { version = "0.4", default-features = false, features = [] }

[target.sparc64-unknown-openbsd.dependencies]
aho-corasick = { version = "0.7", features = ["default", "std"] }
bitflags = { version = "1", features = ["default"] }
datatest = { version = "0.4", features = ["default", "region", "unsafe_test_runner"] }
linked-hash-map = { version = "0.5", default-features = false, features = [] }
memchr = { version = "2", features = ["default", "use_std"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", default-features = false, features = ["unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
region = { version = "2", default-features = false, features = [] }
serde = { version = "1", features = ["default", "std"] }
yaml-rust = { version = "0.4", default-features = false, features = [] }

[target.sparc64-unknown-openbsd.build-dependencies]
aho-corasick = { version = "0.7", features = ["default", "std"] }
bitflags = { version = "1", features = ["default"] }
ctor = { version = "0.1", default-features = false, features = [] }
datatest = { version = "0.4", features = ["default", "region", "unsafe_test_runner"] }
datatest-derive = { version = "0.4", default-features = false, features = [] }
linked-hash-map = { version = "0.5", default-features = false, features = [] }
memchr = { version = "2", features = ["default", "use_std"] }
proc-macro2 = { version = "1", features = ["default", "proc-macro"] }
quote = { path = "/fakepath/testcrate/../quote", features = ["default", "proc-macro"] }
regex = { version = "1", features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-syntax = { version = "0.6", default-features = false, features = ["unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
region = { version = "2", default-features = false, features = [] }
serde = { version = "1", features = ["default", "std"] }
syn = { version = "1", features = ["clone-impls", "default", "derive", "fold", "full", "parsing", "printing", "proc-macro", "quote"] }
unicode-xid = { version = "0.2", features = ["default"] }
version_check = { version = "0.9", default-features = false, features = [] }
yaml-rust = { version = "0.4", default-features = false, features = [] }

### END HAKARI SECTION

# This part of the file should be preserved at the end.
